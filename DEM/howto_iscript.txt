1. Download *.zip files from ALOS database
	    https://ursa.asfdaac.alaska.edu/cgi-bin/login/guest/

2. Run iscript1.py
       usage: iscript1.py <slc y/n> <commonflag y/n>
       slc parameter refers to whether you want to create slcs with common master file or just want sbas or ps
       ***sql_mod files should be in same directory as iscript1.py***
       
       Procedure:
       - Unzips *.zip files
       - Preprocesses these with alos_preproc_list.py
       - Creates a list of position files and gets the peg point from this lisk by running ~/orbit/setmocompstack
       - Calculates latitude and longitude and retrieves needed *.dem files from jukebox server.  Also creates final DEM and RSC files with these *.dem tiles.
         DEM and RSC files called 'elevation.dem' and 'elevation.dem.rsc' (written to 'params' file)
       - Assigns a master file with finer resolution and processes slcs to common coords with alos_slc_stack.py.  If upsampling needed, runs alos_slc_stack_upsample.py.
       - If slc='y' (default), creates a set of igrams using a common master with alos_interferograms.py.
         If slc='n' (only plan to do sbas or ps), creates table with alos_tables.py.

3. Create 'inputs' file in current directory
	  required formatting documented in 'inputs_documentation.txt'

4. Run iscript2.py
       ***sql_mod files should be in same directory as iscript2.py***
       
       Procedure:
       - creates a subdirectory to create interferograms
       - creates list of sbas pairs with alos_sbas_list.py
       - extracts as much of the slc scenes as needed and creates the interferograms with alos_ps_sbas_igrams.py
	 does cross multiple and flattening (creating *.flat files)
	 (moves the *.dem*, params, and pegpoint file to the subdirectory)
       - creates a list of *.flat files
       - multilooks these 1-look interferograms (for sbas) with multilook_igrams.py
       - for sbas reduction, generates auxiliary files (Tm.out, deltime.out, Bperp.out, timedeltas.out) with alos_sbas_setup.py 
	     computes baseline and time difference information that creates sbas geometry and time matrices
	     values in Bperp are approximated by full baseline length
       - unwraps interferograms with unwrap_multilook_igrams.py
       - creates a list of *.f files and performs initial sbas reduction calculations with sbas_test
	 documentation to build 'sbas_test.f90' in 'build_sbas_test.txt'

5. Matlab script for displaying SBAS reduction: sbas_test.m