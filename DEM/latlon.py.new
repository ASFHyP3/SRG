#!/usr/bin/env python

#  FUNCTION

import sys
import os
import math
import string

ver=sys.version_info
if ver[1] == 4:
    import sqlite as sqlite3

if ver[1] > 4:
    import sqlite3

if len(sys.argv)< 1:
    print 'Usage: latlon.py'
    sys.exit(1)
if len(sys.argv) > 1:
    print 'Usage: latlon.py'
    sys.exit(1)

latlon_file=open('latloncoords', 'r')
latlon=latlon_file.readlines()
coords=[]
#lat-up long-down
for line in latlon:
    coord = line.split()
    coords.append(coord[0])
#print coords
latlon_file.close()
coords[0]=int(math.ceil(float(coords[0])))
coords[1]=int(math.floor(float(coords[1])))
coords[2]=int(math.ceil(float(coords[2])))
coords[3]=int(math.floor(float(coords[3])))
print coords

lat = coords[2]
long = coords[1]
x = abs(coords[3]-coords[1])+1
y = abs(coords[2]-coords[0])+1


#Find and download .dem files
filelist=[]
for i in range(lat-y,lat):
    for j in range(long,long+x):
        if lat<0:
            if -i<10:
                loc='S0'+str(-i)
            else:
                loc='S'+str(-i)
        else:
            if i<10:
                loc='N0'+str(i)
            else:
                loc='N'+str(i)
        if long<0:
            if -j<10:
                loc=loc+'W00'+str(-j)
            elif -j<100:
                loc=loc+'W0'+str(-j)
            else:
                loc=loc+'W'+str(-j)
        else:
            if j<10:
                loc=loc+'E00'+str(j)
            elif j<100:
                loc=loc+'E0'+str(j)
            else: 
                loc=loc+'E'+str(j)
#        print loc
        filelist.append(loc+'.dem')

filelist.sort()
#filelist.append(loc+'.dem.rsc')
#print filelist

region=''
arcsec=''
regions=['California','United_States','North_America','South_America','Eurasia']
flist1=[]
flist3=[]
addrlist1=[]
addrlist3=[]
templist=[]
remlist=[]
addresslist=[]

for file in filelist:
    asec='1arcsec'
    for reg in regions[0:2]:
        address='http://jukebox.stanford.edu/SRTM/'+reg+'/'+asec+'/'+file
        if (os.system('wget --spider '+address)==0):
            addrlist1.append(address)
            flist1.append(file)
            break
#    print flist1
if len(addrlist1) == len(filelist):
    filelist=flist1
    addresslist=addrlist1
        
else:
    asec='3arcsec'
    for file in filelist:
        for reg in regions[2:5]:
            address='http://jukebox.stanford.edu/SRTM/'+reg+'/'+asec+'/'+file
            if (os.system('wget --spider '+address)==0):
                addrlist3.append(address)
                flist3.append(file)
                break
#    print flist3
    if len(addrlist3) == len(filelist):
        filelist=flist3
        addresslist=addrlist3
    
    else:
        if len(addrlist3)>len(addrlist1):
            flist1=flist3
            addrlist1=addrlist3
        print flist1
        print addrlist1
        latlist=[]
        lonlist=[]
        #Create list of latitudes and longitudes
        for file in filelist:
            if not file in flist1:
                flat=file[0:3]
                flon=file[3:7]
                if (not flat in latlist) & ((int(file[1:3]) == abs(lat-1)) | (int(file[1:3]) == abs(lat-y))):
                    latlist.append(flat)
                if (not flon in lonlist) & ((int(file[4:7]) == abs(long)) | (int(file[4:7]) == abs(long+x-1))):
                    lonlist.append(flon)
#                print latlist
#                print lonlist
            
        x-=len(lonlist)
        y-=len(latlist)
            
        for file in flist1:
            if file[0:3] in latlist:
                templist.append(file)
            elif file[3:7] in lonlist:
                templist.append(file)
                
#        print 'files to remove: ',templist
#        print 'x: ',x
#        print 'y: ',y

        for file in templist:
            addrlist1.remove(addrlist1[flist1.index(file)])
            flist1.remove(file)


#        print 'latitude: ',lat
#        print 'longitude: ',long

        #Adjust reference latitude and longitude of .dem file
        max_lat=0
        min_lon=0
        for file in flist1:
            flat=int(file[1:3])
            flon=int(file[4:7])
            if (flat+1 > max_lat) | (max_lat==0):
                max_lat = flat+1
            if (flon < min_lon) | (min_lon==0):
                min_lon = flon
            if max_lat < abs(lat):
                if lat < 0:
                    lat=-1*max_lat
                else:
                    lat=max_lat
            if min_lon > abs(long):
                if long < 0:
                    long=-1*min_lon
                else:
                    long=min_lon
        filelist=flist1
        addresslist=addrlist1
#        print filelist
#        print 'latitude: ',lat
#        print 'longitude: ',long
        
if len(filelist)==0:
    print 'dem file not created: files not found on server'
    sys.exit(1)

rscfile=filelist[0].replace('.dem','.dem.rsc')
filelist.append(rscfile)
addresslist.append(addresslist[0].replace('.dem','.dem.rsc'))

for file in os.listdir('.'):
    if file in filelist:
        addresslist.remove(addresslist[filelist.index(file)])
        filelist.remove(file)
#print filelist
if not len(filelist)==0:
    demlist = open('demfiles.txt','w')
    for addr in addresslist:
        command = 'wget '+addr
#        print command
        ret=os.system(command)
    for file in filelist:
        if not file.endswith('.rsc'):
            demlist.write(file+'\n')
    demlist.close()
#    print 'list of dem files created'


file=open(rscfile)
strings=file.readlines()
width=strings[0].split()
step=strings[4].split()
command='/home/zebker/alos/monica/makeDEM '+str(lat)+' '+str(long)+' '+str(x)+' '+str(y)+' '+width[1]+' '+step[1]+' '+'demfiles.txt'
print command
ret=os.system(command)
    
rsc=open('elevation.dem.rsc','r')
lines=rsc.readlines()
st=[]
num=[]
for line in lines:
    words=line.split()
    st.append(words[0])
    num.append(words[1])
#print st
#print num
rsc.close()

newrsc=open('elevation.dem.rsc','w')
for i in range(len(st)):
    newrsc.write(st[i]+((15-len(st[i]))*' '))
    newrsc.write(num[i]+'\n')
newrsc.close()
